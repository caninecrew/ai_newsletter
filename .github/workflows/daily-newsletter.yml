name: Daily AI Newsletter

on:
  schedule:
    - cron: '0 8 * * *'  # Run at 8:00 AM UTC daily
  workflow_dispatch:      # Allow manual trigger for testing

jobs:
  send-newsletter:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -c "import nltk; nltk.download('punkt')"
      
      - name: Check for critical files
        run: |
          echo "Checking for required files..."
          ls -la
          if [ ! -f "main.py" ]; then
            echo "ERROR: main.py not found!"
            exit 1
          fi
          if [ ! -f "requirements.txt" ]; then
            echo "ERROR: requirements.txt not found!"
            exit 1
          fi
          if [ ! -f "config.py" ]; then
            echo "ERROR: config.py not found!"
            exit 1
          fi
          echo "All required files found."
      
      - name: Set up Chrome for Selenium
        uses: browser-actions/setup-chrome@v1
        
      - name: Run newsletter script
        env:
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY }}
          NEWS_SOURCE: ${{ secrets.NEWS_SOURCE || 'rss' }}  # Default to RSS if not specified
        run: |
          echo "Starting newsletter script with news source: $NEWS_SOURCE"
          # Create empty logs.txt file if it doesn't exist
          touch logs.txt
          # Update config.py with the specified news source
          sed -i "s/PRIMARY_NEWS_SOURCE = \".*\"/PRIMARY_NEWS_SOURCE = \"$NEWS_SOURCE\"/" config.py
          # Run with error handling
          python main.py || { echo "Script failed with exit code $?"; exit 1; }
          
      - name: Archive logs
        if: always()  # Run even if the newsletter script fails
        uses: actions/upload-artifact@v4
        with:
          name: newsletter-logs
          path: |
            logs.txt
            logs/*.log
          retention-days: 7

      - name: Report completion status
        if: ${{ success() }}
        run: |
          echo "Newsletter generated and sent successfully at $(date)"
          echo "Latest entries from logs.txt:"
          tail -n 5 logs.txt